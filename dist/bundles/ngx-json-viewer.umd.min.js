!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/common"],n):n(e["ngx-json-viewer"]={},e.ng.core,e.ng.common)}(this,function(e,n,t){"use strict";var s=(o.prototype.getOpenKeysRecursive=function(){var n={};if(this.childrenComponents.forEach(function(e){n[e.key+"_"+e.length]=e.getOpenKeysRecursive()}),0!==Object.keys(n).length)return n},o.prototype.openSegments=function(){var t=this;Object.keys(this._previouslyOpenKeys).forEach(function(e){var n=e.replace(t.underscoreRegex,""),e=t.segments.find(function(e){return e.key===n});e&&t.isExpandable(e)&&(e.expanded=!0)})},o.prototype.ngOnChanges=function(){var n=this;this.restoreExpanded&&this.childrenComponents&&(this._previouslyOpenKeys=this.getOpenKeysRecursive(),console.log(this._previouslyOpenKeys)),this.segments=[],this.json=this.decycle(this.json),this._currentDepth++,"object"==typeof this.json?Object.keys(this.json).forEach(function(e){n.segments.push(n.parseKeyValue(e,n.json[e]))}):this.segments.push(this.parseKeyValue("("+typeof this.json+")",this.json)),this._previouslyOpenKeys&&this.openSegments()},o.prototype.isExpandable=function(e){return"object"===e.type||"array"===e.type},o.prototype.toggle=function(e){this.isExpandable(e)&&(e.expanded=!e.expanded)},o.prototype.parseKeyValue=function(e,n){var t={key:e,value:n,type:undefined,description:""+n,expanded:this.isExpanded()};switch(typeof t.value){case"number":t.type="number";break;case"boolean":t.type="boolean";break;case"function":t.type="function";break;case"string":t.type="string",t.description='"'+t.value+'"';break;case"undefined":t.type="undefined",t.description="undefined";break;case"object":null===t.value?(t.type="null",t.description="null"):Array.isArray(t.value)?(t.type="array",t.description="Array["+t.value.length+"] "+JSON.stringify(t.value)):t.value instanceof Date?t.type="date":(t.type="object",t.description="Object "+JSON.stringify(t.value))}return t},o.prototype.isExpanded=function(){return this.expanded&&!(-1<this.depth&&this._currentDepth>=this.depth)},o.prototype.decycle=function(e){var o=new WeakMap;return function r(n,t){var e,s;return"object"!=typeof n||null===n||n instanceof Boolean||n instanceof Date||n instanceof Number||n instanceof RegExp||n instanceof String?n:(e=o.get(n))!==undefined?{$ref:e}:(o.set(n,t),Array.isArray(n)?(s=[],n.forEach(function(e,n){s[n]=r(e,t+"["+n+"]")})):(s={},Object.keys(n).forEach(function(e){s[e]=r(n[e],t+"["+JSON.stringify(e)+"]")})),s)}(e,"$")},o);function o(){this.expanded=!0,this.depth=-1,this.key="Object",this.length=-1,this.restoreExpanded=!1,this.showTypeHeadings=!1,this._currentDepth=-1,this.nextOpenKeys={},this.segments=[],this.underscoreRegex=/_[^_]+$/}s.decorators=[{type:n.Component,args:[{selector:"ngx-json-viewer",template:'\n    <section class="ngx-json-viewer">\n      <section *ngFor="let segment of segments" [ngClass]="[\'segment\', \'segment-type-\' + segment.type]">\n        <section\n          (click)="toggle(segment)"\n          [ngClass]="{\n            \'segment-main\': true,\n            expandable: isExpandable(segment),\n            expanded: segment.expanded\n          }"\n        >\n          <div *ngIf="isExpandable(segment)" class="toggler"></div>\n          <span class="segment-key">{{ segment.key }}</span>\n          <span class="segment-separator">: </span>\n          <span *ngIf="!segment.expanded || !isExpandable(segment)" class="segment-value">{{\n            segment.description\n          }}</span>\n          <span\n            *ngIf="showTypeHeadings && segment.expanded && segment.type == \'array\'"\n            class="segment-value"\n            >Array[{{ segment.value.length }}]</span\n          >\n          <span\n            *ngIf="showTypeHeadings && segment.expanded && segment.type == \'object\'"\n            class="segment-value"\n            >Object</span\n          >\n        </section>\n        <section *ngIf="segment.expanded && isExpandable(segment)" class="children">\n          <ngx-json-viewer\n            [json]="segment.value"\n            [expanded]="expanded"\n            [depth]="depth"\n            [_currentDepth]="_currentDepth"\n            [key]="segment.key"\n            [length]="segment.type === \'array\' ? segment.value.length : -1"\n            [_previouslyOpenKeys]="\n              _previouslyOpenKeys &&\n              _previouslyOpenKeys[\n                segment.type === \'array\'\n                  ? segment.key + \'_\' + segment.value.length\n                  : segment.key + \'_-1\'\n              ]\n            "\n          ></ngx-json-viewer>\n        </section>\n      </section>\n    </section>\n  ',styles:['\n    @charset "UTF-8";\n    .ngx-json-viewer {\n      font-family: monospace;\n      font-size: 1em;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      position: relative; }\n      .ngx-json-viewer .segment {\n        padding: 0px;\n        margin: 0px 0px 1px 12px; }\n        .ngx-json-viewer .segment .segment-main {\n          word-wrap: break-word; }\n          .ngx-json-viewer .segment .segment-main .toggler {\n            position: absolute;\n            margin-left: -14px;\n            margin-top: 3px;\n            font-size: .8em;\n            line-height: 1.2em;\n            vertical-align: middle;\n            color: #787878; }\n            .ngx-json-viewer .segment .segment-main .toggler::after {\n              display: inline-block;\n              content: "â–º";\n              -webkit-transition: -webkit-transform 0.1s ease-in;\n              transition: -webkit-transform 0.1s ease-in;\n              transition: transform 0.1s ease-in;\n              transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in; }\n          .ngx-json-viewer .segment .segment-main .segment-key {\n            color: #00008b;\n            word-wrap: break-word;\n            white-space: pre-line; }\n          .ngx-json-viewer .segment .segment-main .segment-separator {\n            color: #00008b; }\n          .ngx-json-viewer .segment .segment-main .segment-value {\n            color: #000; }\n        .ngx-json-viewer .segment .children {\n          margin-left: 4px; }\n      .ngx-json-viewer .segment-type-string > .segment-main > .segment-value {\n        color: green; }\n      .ngx-json-viewer .segment-type-number > .segment-main > .segment-value {\n        color: #0000ff; }\n      .ngx-json-viewer .segment-type-boolean > .segment-main > .segment-value {\n        color: red; }\n      .ngx-json-viewer .segment-type-date > .segment-main > .segment-value {\n        color: #05668D; }\n      .ngx-json-viewer .segment-type-array > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-function > .segment-main > .segment-value {\n        color: #999; }\n      .ngx-json-viewer .segment-type-null > .segment-main > .segment-value {\n        color: #855a00; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        color: #855a00; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-key {\n        color: #999; }\n      .ngx-json-viewer .segment-type-undefined > .segment-main > .segment-value {\n        background-color: #999; }\n      .ngx-json-viewer .segment-type-object > .segment-main,\n      .ngx-json-viewer .segment-type-array > .segment-main {\n        white-space: nowrap; }\n      .ngx-json-viewer .expanded > .toggler::after {\n        -webkit-transform: rotate(90deg);\n                transform: rotate(90deg); }\n      .ngx-json-viewer .expandable > .segment-value {\n        display: inline-block;\n        vertical-align: bottom;\n        text-overflow: ellipsis;\n        overflow: hidden; }\n      .ngx-json-viewer .expandable,\n      .ngx-json-viewer .expandable > .toggler {\n        cursor: pointer; }\n  ']}]}],s.ctorParameters=function(){return[]},s.propDecorators={json:[{type:n.Input}],expanded:[{type:n.Input}],depth:[{type:n.Input}],key:[{type:n.Input}],length:[{type:n.Input}],restoreExpanded:[{type:n.Input}],showTypeHeadings:[{type:n.Input}],_currentDepth:[{type:n.Input}],_previouslyOpenKeys:[{type:n.Input}],childrenComponents:[{type:n.ViewChildren,args:[s]}]};var r=function(){};r.decorators=[{type:n.NgModule,args:[{imports:[t.CommonModule],declarations:[s],exports:[s]}]}],r.ctorParameters=function(){return[]},e.NgxJsonViewerModule=r,e.NgxJsonViewerComponent=s,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-json-viewer.umd.min.js.map
