{"version":3,"sources":["../../src/ngx-json-viewer/ngx-json-viewer.component.ts","../../src/ngx-json-viewer.module.ts"],"names":["NgxJsonViewerComponent","this","expanded","cleanOnChange","segments","prototype","ngOnChanges","_this","json","Object","keys","forEach","key","push","parseKeyValue","isExpandable","segment","type","toggle","value","undefined","description","Array","isArray","length","JSON","stringify","Date","Component","args","selector","template","Input","NgModule","imports","CommonModule","declarations","exports"],"mappings":"6YAUA,SAAAA,IAQWC,KAAAC,UAAW,EAIXD,KAAAE,eAAgB,EAEzBF,KAAAG,SAAsB,UAEtBJ,EAAAK,UAAAC,YAAA,WAAA,IAAAC,EAAAN,KACMA,KAAKE,gBACPF,KAAKG,SAAW,IAGO,iBAAdH,KAAKO,KACdC,OAAOC,KAAKT,KAAKO,MAAMG,SAAS,SAAAC,GAC9BL,EAAKH,SAASS,KAAKN,EAAKO,cAAcF,EAAKL,EAAKC,KAAKI,QAGvDX,KAAKG,SAASS,KAAKZ,KAAKa,cAAc,WAAWb,KAAKO,KAAI,IAAKP,KAAKO,QAIxER,EAAAK,UAAAU,aAAA,SAAaC,GACX,MAAwB,WAAjBA,EAAQC,MAAsC,UAAjBD,EAAQC,MAG9CjB,EAAAK,UAAAa,OAAA,SAAOF,GACDf,KAAKc,aAAaC,KACpBA,EAAQd,UAAYc,EAAQd,WAIxBF,EAAAK,UAAAS,cAAA,SAAcF,EAAUO,GAC9B,IAAMH,EAAmB,CACvBJ,IAAKA,EACLO,MAAOA,EACPF,UAAMG,EACNC,YAAa,GAAKF,EAClBjB,SAAUD,KAAKC,UAGjB,cAAec,EAAQG,OACrB,IAAK,SACHH,EAAQC,KAAO,SACf,MAEF,IAAK,UACHD,EAAQC,KAAO,UACf,MAEF,IAAK,WACHD,EAAQC,KAAO,WACf,MAEF,IAAK,SACHD,EAAQC,KAAO,SACfD,EAAQK,YAAc,IAAML,EAAQG,MAAQ,IAC5C,MAEF,IAAK,YACHH,EAAQC,KAAO,YACfD,EAAQK,YAAc,YACtB,MAEF,IAAK,SAEmB,OAAlBL,EAAQG,OACVH,EAAQC,KAAO,OACfD,EAAQK,YAAc,QACbC,MAAMC,QAAQP,EAAQG,QAC/BH,EAAQC,KAAO,QACfD,EAAQK,YAAc,SAAWL,EAAQG,MAAMK,OAAS,KAAOC,KAAKC,UAAUV,EAAQG,QAC7EH,EAAQG,iBAAiBQ,KAClCX,EAAQC,KAAO,QAEfD,EAAQC,KAAO,SACfD,EAAQK,YAAc,UAAYI,KAAKC,UAAUV,EAAQG,QAM/D,OAAOH,4BA1FVY,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,kBACVC,SAAA,s5FAKCC,EAAAA,wBACAA,EAAAA,6BAIAA,EAAAA,eCNH,iCAXCC,EAAAA,SAAQJ,KAAA,CAAC,CACRK,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZpC,GAEFqC,QAAS,CACPrC","sourcesContent":["import { Component, OnChanges, Input } from '@angular/core';\r\n\r\nexport interface Segment {\r\n  key: string;\r\n  value: any;\r\n  type: undefined | string;\r\n  description: string;\r\n  expanded: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-json-viewer',\r\n  templateUrl: './ngx-json-viewer.component.html',\r\n  styleUrls: ['./ngx-json-viewer.component.scss']\r\n})\r\nexport class NgxJsonViewerComponent implements OnChanges {\r\n\r\n  @Input() json: any;\r\n  @Input() expanded = true;\r\n  /**\r\n   * @deprecated It will be always true and deleted in version 3.0.0\r\n   */\r\n  @Input() cleanOnChange = true;\r\n\r\n  segments: Segment[] = [];\r\n\r\n  ngOnChanges() {\r\n    if (this.cleanOnChange) {\r\n      this.segments = [];\r\n    }\r\n\r\n    if (typeof this.json === 'object') {\r\n      Object.keys(this.json).forEach( key => {\r\n        this.segments.push(this.parseKeyValue(key, this.json[key]));\r\n      });\r\n    } else {\r\n      this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\r\n    }\r\n  }\r\n\r\n  isExpandable(segment: Segment) {\r\n    return segment.type === 'object' || segment.type === 'array';\r\n  }\r\n\r\n  toggle(segment: Segment) {\r\n    if (this.isExpandable(segment)) {\r\n      segment.expanded = !segment.expanded;\r\n    }\r\n  }\r\n\r\n  private parseKeyValue(key: any, value: any): Segment {\r\n    const segment: Segment = {\r\n      key: key,\r\n      value: value,\r\n      type: undefined,\r\n      description: '' + value,\r\n      expanded: this.expanded\r\n    };\r\n\r\n    switch (typeof segment.value) {\r\n      case 'number': {\r\n        segment.type = 'number';\r\n        break;\r\n      }\r\n      case 'boolean': {\r\n        segment.type = 'boolean';\r\n        break;\r\n      }\r\n      case 'function': {\r\n        segment.type = 'function';\r\n        break;\r\n      }\r\n      case 'string': {\r\n        segment.type = 'string';\r\n        segment.description = '\"' + segment.value + '\"';\r\n        break;\r\n      }\r\n      case 'undefined': {\r\n        segment.type = 'undefined';\r\n        segment.description = 'undefined';\r\n        break;\r\n      }\r\n      case 'object': {\r\n        // yea, null is object\r\n        if (segment.value === null) {\r\n          segment.type = 'null';\r\n          segment.description = 'null';\r\n        } else if (Array.isArray(segment.value)) {\r\n          segment.type = 'array';\r\n          segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\r\n        } else if (segment.value instanceof Date) {\r\n          segment.type = 'date';\r\n        } else {\r\n          segment.type = 'object';\r\n          segment.description = 'Object ' + JSON.stringify(segment.value);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    return segment;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxJsonViewerComponent } from './ngx-json-viewer/ngx-json-viewer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxJsonViewerComponent\r\n  ],\r\n  exports: [\r\n    NgxJsonViewerComponent\r\n  ]\r\n})\r\nexport class NgxJsonViewerModule { }\r\n"]}