{"version":3,"file":"ngx-json-viewer.umd.js","sources":["../../src/ngx-json-viewer/ngx-json-viewer.component.ts","../../src/ngx-json-viewer.module.ts","../../ngx-json-viewer.ts"],"sourcesContent":["import {Component, OnChanges, Input, ViewChildren, QueryList} from '@angular/core';\r\n\r\nexport interface ISegment {\r\n  key: string;\r\n  value: any;\r\n  type: undefined | string;\r\n  description: string;\r\n  expanded: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-json-viewer',\r\n  templateUrl: './ngx-json-viewer.component.html',\r\n  styleUrls: ['./ngx-json-viewer.component.scss'],\r\n})\r\nexport class NgxJsonViewerComponent implements OnChanges {\r\n  @Input() public json: any;\r\n  @Input() public expanded = true;\r\n  @Input() public depth = -1;\r\n  @Input() public restoreExpanded = false;\r\n  @Input() public showTypeHeadings = false;\r\n\r\n  @Input() public _key = 'Object';\r\n  @Input() public _previouslyOpenKeys?: {[key: string]: any};\r\n  @Input() public _currentDepth = -1;\r\n\r\n  public nextOpenKeys: {[key: string]: any} = {};\r\n  public segments: ISegment[] = [];\r\n\r\n  // Matches the last underscore in a string\r\n  private underscoreRegex = /_[^_]+$/;\r\n\r\n  @ViewChildren(NgxJsonViewerComponent)\r\n  public childrenComponents: QueryList<NgxJsonViewerComponent>;\r\n\r\n  private getOpenKeysRecursive(): any {\r\n    const openKeys: {[key: string]: any} = {};\r\n    this.childrenComponents.forEach((component) => {\r\n      // Save key and length\r\n      openKeys[component._key] = component.getOpenKeysRecursive();\r\n    });\r\n\r\n    if (Object.keys(openKeys).length === 0) {\r\n      return;\r\n    }\r\n    return openKeys;\r\n  }\r\n\r\n  private openSegments(): void {\r\n    const keys = Object.keys(this._previouslyOpenKeys!);\r\n    keys.forEach((key) => {\r\n      // Check to see if the key exists, if so expands it\r\n      const strippedKey = key.replace(this.underscoreRegex, '');\r\n      const foundSegment = this.segments.find((segment) => segment.key === strippedKey);\r\n\r\n      if (!foundSegment) {\r\n        return;\r\n      }\r\n\r\n      if (!this.isExpandable(foundSegment)) {\r\n        return;\r\n      }\r\n\r\n      foundSegment.expanded = true;\r\n    });\r\n  }\r\n\r\n  public ngOnChanges(): void {\r\n    // Save open keys structure before processing new json\r\n    // Will only run in top level\r\n    if (this.restoreExpanded && this.childrenComponents) {\r\n      this._previouslyOpenKeys = this.getOpenKeysRecursive();\r\n    }\r\n\r\n    this.segments = [];\r\n\r\n    // remove cycles\r\n    this.json = this.decycle(this.json);\r\n\r\n    this._currentDepth++;\r\n\r\n    if (typeof this.json === 'object') {\r\n      Object.keys(this.json).forEach((key) => {\r\n        this.segments.push(this.parseKeyValue(key, this.json[key]));\r\n      });\r\n    } else {\r\n      this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\r\n    }\r\n\r\n    if (!this._previouslyOpenKeys) {\r\n      return;\r\n    } else {\r\n      this.openSegments();\r\n    }\r\n  }\r\n\r\n  public isExpandable(segment: ISegment): any {\r\n    return segment.type === 'object' || segment.type === 'array';\r\n  }\r\n\r\n  public toggle(segment: ISegment): any {\r\n    if (this.isExpandable(segment)) {\r\n      segment.expanded = !segment.expanded;\r\n    }\r\n  }\r\n\r\n  private parseKeyValue(key: any, value: any): ISegment {\r\n    const segment: ISegment = {\r\n      key: key,\r\n      value: value,\r\n      type: undefined,\r\n      description: '' + value,\r\n      expanded: this.isExpanded(),\r\n    };\r\n\r\n    switch (typeof segment.value) {\r\n      case 'number': {\r\n        segment.type = 'number';\r\n        break;\r\n      }\r\n      case 'boolean': {\r\n        segment.type = 'boolean';\r\n        break;\r\n      }\r\n      case 'function': {\r\n        segment.type = 'function';\r\n        break;\r\n      }\r\n      case 'string': {\r\n        segment.type = 'string';\r\n        segment.description = '\"' + segment.value + '\"';\r\n        break;\r\n      }\r\n      case 'undefined': {\r\n        segment.type = 'undefined';\r\n        segment.description = 'undefined';\r\n        break;\r\n      }\r\n      case 'object': {\r\n        // yea, null is object\r\n        if (segment.value === null) {\r\n          segment.type = 'null';\r\n          segment.description = 'null';\r\n        } else if (Array.isArray(segment.value)) {\r\n          segment.type = 'array';\r\n          segment.description =\r\n            'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\r\n        } else if (segment.value instanceof Date) {\r\n          segment.type = 'date';\r\n        } else {\r\n          segment.type = 'object';\r\n          segment.description = 'Object ' + JSON.stringify(segment.value);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    return segment;\r\n  }\r\n\r\n  private isExpanded(): boolean {\r\n    return this.expanded && !(this.depth > -1 && this._currentDepth >= this.depth);\r\n  }\r\n\r\n  // https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\r\n  private decycle(object: any): any {\r\n    const objects = new WeakMap();\r\n    return (function derez(value: any, path: any): any {\r\n      let oldPath;\r\n      let nu: any;\r\n\r\n      if (\r\n        typeof value === 'object' &&\r\n        value !== null &&\r\n        !(value instanceof Boolean) &&\r\n        !(value instanceof Date) &&\r\n        !(value instanceof Number) &&\r\n        !(value instanceof RegExp) &&\r\n        !(value instanceof String)\r\n      ) {\r\n        oldPath = objects.get(value);\r\n        if (oldPath !== undefined) {\r\n          return {$ref: oldPath};\r\n        }\r\n        objects.set(value, path);\r\n\r\n        if (Array.isArray(value)) {\r\n          nu = [];\r\n          value.forEach((element, i) => {\r\n            nu[i] = derez(element, path + '[' + i + ']');\r\n          });\r\n        } else {\r\n          nu = {};\r\n          Object.keys(value).forEach((name) => {\r\n            nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');\r\n          });\r\n        }\r\n        return nu;\r\n      }\r\n      return value;\r\n    })(object, '$');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxJsonViewerComponent } from './ngx-json-viewer/ngx-json-viewer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxJsonViewerComponent\r\n  ],\r\n  exports: [\r\n    NgxJsonViewerComponent\r\n  ]\r\n})\r\nexport class NgxJsonViewerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["Component","Input","ViewChildren","NgModule","CommonModule"],"mappings":"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"}