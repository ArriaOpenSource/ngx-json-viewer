{"version":3,"file":"ngx-json-viewer.js","sources":["ng://ngx-json-viewer/src/ngx-json-viewer/ngx-json-viewer.component.ts","ng://ngx-json-viewer/src/ngx-json-viewer.module.ts","ng://ngx-json-viewer/ngx-json-viewer.ts"],"sourcesContent":["import { Component, OnChanges, Input } from '@angular/core';\r\n\r\nexport interface Segment {\r\n  key: string;\r\n  value: any;\r\n  type: undefined | string;\r\n  description: string;\r\n  expanded: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-json-viewer',\r\n  templateUrl: './ngx-json-viewer.component.html',\r\n  styleUrls: ['./ngx-json-viewer.component.scss']\r\n})\r\nexport class NgxJsonViewerComponent implements OnChanges {\r\n\r\n  @Input() json: any;\r\n  @Input() expanded = true;\r\n  /**\r\n   * @deprecated It will be always true and deleted in version 3.0.0\r\n   */\r\n  @Input() cleanOnChange = true;\r\n\r\n  segments: Segment[] = [];\r\n\r\n  ngOnChanges() {\r\n    if (this.cleanOnChange) {\r\n      this.segments = [];\r\n    }\r\n\r\n    if (typeof this.json === 'object') {\r\n      Object.keys(this.json).forEach( key => {\r\n        this.segments.push(this.parseKeyValue(key, this.json[key]));\r\n      });\r\n    } else {\r\n      this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\r\n    }\r\n  }\r\n\r\n  isExpandable(segment: Segment) {\r\n    return segment.type === 'object' || segment.type === 'array';\r\n  }\r\n\r\n  toggle(segment: Segment) {\r\n    if (this.isExpandable(segment)) {\r\n      segment.expanded = !segment.expanded;\r\n    }\r\n  }\r\n\r\n  private parseKeyValue(key: any, value: any): Segment {\r\n    const segment: Segment = {\r\n      key: key,\r\n      value: value,\r\n      type: undefined,\r\n      description: '' + value,\r\n      expanded: this.expanded\r\n    };\r\n\r\n    switch (typeof segment.value) {\r\n      case 'number': {\r\n        segment.type = 'number';\r\n        break;\r\n      }\r\n      case 'boolean': {\r\n        segment.type = 'boolean';\r\n        break;\r\n      }\r\n      case 'function': {\r\n        segment.type = 'function';\r\n        break;\r\n      }\r\n      case 'string': {\r\n        segment.type = 'string';\r\n        segment.description = '\"' + segment.value + '\"';\r\n        break;\r\n      }\r\n      case 'undefined': {\r\n        segment.type = 'undefined';\r\n        segment.description = 'undefined';\r\n        break;\r\n      }\r\n      case 'object': {\r\n        // yea, null is object\r\n        if (segment.value === null) {\r\n          segment.type = 'null';\r\n          segment.description = 'null';\r\n        } else if (Array.isArray(segment.value)) {\r\n          segment.type = 'array';\r\n          segment.description = 'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\r\n        } else if (segment.value instanceof Date) {\r\n          segment.type = 'date';\r\n        } else {\r\n          segment.type = 'object';\r\n          segment.description = 'Object ' + JSON.stringify(segment.value);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    return segment;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxJsonViewerComponent } from './ngx-json-viewer/ngx-json-viewer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxJsonViewerComponent\r\n  ],\r\n  exports: [\r\n    NgxJsonViewerComponent\r\n  ]\r\n})\r\nexport class NgxJsonViewerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}