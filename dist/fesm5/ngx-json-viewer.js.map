{"version":3,"file":"ngx-json-viewer.js","sources":["ng://ngx-json-viewer/src/ngx-json-viewer/ngx-json-viewer.component.ts","ng://ngx-json-viewer/src/ngx-json-viewer.module.ts","ng://ngx-json-viewer/ngx-json-viewer.ts"],"sourcesContent":["import {Component, OnChanges, Input, ViewChildren, QueryList} from '@angular/core';\r\n\r\nexport interface ISegment {\r\n  key: string;\r\n  value: any;\r\n  type: undefined | string;\r\n  description: string;\r\n  expanded: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-json-viewer',\r\n  templateUrl: './ngx-json-viewer.component.html',\r\n  styleUrls: ['./ngx-json-viewer.component.scss']\r\n})\r\nexport class NgxJsonViewerComponent implements OnChanges {\r\n  @Input() public json: any;\r\n  @Input() public expanded = true;\r\n  @Input() public depth = -1;\r\n  @Input() public key = 'Object';\r\n  // Tracks the length of array types. -1 for other types\r\n  @Input() public length = -1;\r\n  @Input() public restoreExpanded = false;\r\n\r\n  @Input() public showTypeHeadings = false;\r\n\r\n  @Input() public _currentDepth = -1;\r\n  @Input() public _previouslyOpenKeys?: {[key: string]: any};\r\n\r\n  public nextOpenKeys: {[key: string]: any} = {};\r\n  public segments: ISegment[] = [];\r\n\r\n  // Matches the last underscore in a string\r\n  private underscoreRegex = /_[^_]+$/;\r\n\r\n  @ViewChildren(NgxJsonViewerComponent) public childrenComponents: QueryList<\r\n  NgxJsonViewerComponent\r\n  >;\r\n\r\n  private getOpenKeysRecursive(): any {\r\n    const openKeys: {[key: string]: any} = {};\r\n    this.childrenComponents.forEach((component: NgxJsonViewerComponent) => {\r\n      // Save key and length - on reload array elements should only be reopened if\r\n      // the array is the same length\r\n      openKeys[component.key + '_' + component.length] = component.getOpenKeysRecursive();\r\n    });\r\n\r\n    if (Object.keys(openKeys).length === 0) {\r\n      return;\r\n    }\r\n    return openKeys;\r\n  }\r\n\r\n  private openSegments(): void {\r\n    const keys = Object.keys(this._previouslyOpenKeys!);\r\n    keys.forEach(key => {\r\n      // Check to see if the key exists, if so expands it\r\n      const strippedKey = key.replace(this.underscoreRegex, '');\r\n      const foundSegment = this.segments.find(segment => {\r\n        return segment.key === strippedKey;\r\n      });\r\n\r\n      if (!foundSegment) {\r\n        return;\r\n      }\r\n\r\n      if (!this.isExpandable(foundSegment)) {\r\n        return;\r\n      }\r\n\r\n      foundSegment.expanded = true;\r\n    });\r\n  }\r\n\r\n  public ngOnChanges(): void {\r\n    // Save open keys structure before processing new json\r\n    // Will only run in top level\r\n    if (this.restoreExpanded && this.childrenComponents) {\r\n      this._previouslyOpenKeys = this.getOpenKeysRecursive();\r\n      console.log(this._previouslyOpenKeys);\r\n    }\r\n\r\n    this.segments = [];\r\n\r\n    // remove cycles\r\n    this.json = this.decycle(this.json);\r\n\r\n    this._currentDepth++;\r\n\r\n    if (typeof this.json === 'object') {\r\n      Object.keys(this.json).forEach(key => {\r\n        this.segments.push(this.parseKeyValue(key, this.json[key]));\r\n      });\r\n    } else {\r\n      this.segments.push(this.parseKeyValue(`(${typeof this.json})`, this.json));\r\n    }\r\n\r\n    if (!this._previouslyOpenKeys) {\r\n      return;\r\n    } else {\r\n      this.openSegments();\r\n    }\r\n  }\r\n\r\n  public isExpandable(segment: ISegment): any {\r\n    return segment.type === 'object' || segment.type === 'array';\r\n  }\r\n\r\n  public toggle(segment: ISegment): any {\r\n    if (this.isExpandable(segment)) {\r\n      segment.expanded = !segment.expanded;\r\n    }\r\n  }\r\n\r\n  private parseKeyValue(key: any, value: any): ISegment {\r\n    const segment: ISegment = {\r\n      key: key,\r\n      value: value,\r\n      type: undefined,\r\n      description: '' + value,\r\n      expanded: this.isExpanded(),\r\n    };\r\n\r\n    switch (typeof segment.value) {\r\n      case 'number': {\r\n        segment.type = 'number';\r\n        break;\r\n      }\r\n      case 'boolean': {\r\n        segment.type = 'boolean';\r\n        break;\r\n      }\r\n      case 'function': {\r\n        segment.type = 'function';\r\n        break;\r\n      }\r\n      case 'string': {\r\n        segment.type = 'string';\r\n        segment.description = '\"' + segment.value + '\"';\r\n        break;\r\n      }\r\n      case 'undefined': {\r\n        segment.type = 'undefined';\r\n        segment.description = 'undefined';\r\n        break;\r\n      }\r\n      case 'object': {\r\n        // yea, null is object\r\n        if (segment.value === null) {\r\n          segment.type = 'null';\r\n          segment.description = 'null';\r\n        } else if (Array.isArray(segment.value)) {\r\n          segment.type = 'array';\r\n          segment.description =\r\n            'Array[' + segment.value.length + '] ' + JSON.stringify(segment.value);\r\n        } else if (segment.value instanceof Date) {\r\n          segment.type = 'date';\r\n        } else {\r\n          segment.type = 'object';\r\n          segment.description = 'Object ' + JSON.stringify(segment.value);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    return segment;\r\n  }\r\n\r\n  private isExpanded(): boolean {\r\n    return this.expanded && !(this.depth > -1 && this._currentDepth >= this.depth);\r\n  }\r\n\r\n  // https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\r\n  private decycle(object: any): any {\r\n    const objects = new WeakMap();\r\n    return (function derez(value: any, path: any): any {\r\n      let oldPath;\r\n      let nu: any;\r\n\r\n      if (\r\n        typeof value === 'object' &&\r\n        value !== null &&\r\n        !(value instanceof Boolean) &&\r\n        !(value instanceof Date) &&\r\n        !(value instanceof Number) &&\r\n        !(value instanceof RegExp) &&\r\n        !(value instanceof String)\r\n      ) {\r\n        oldPath = objects.get(value);\r\n        if (oldPath !== undefined) {\r\n          return {$ref: oldPath};\r\n        }\r\n        objects.set(value, path);\r\n\r\n        if (Array.isArray(value)) {\r\n          nu = [];\r\n          value.forEach((element, i) => {\r\n            nu[i] = derez(element, path + '[' + i + ']');\r\n          });\r\n        } else {\r\n          nu = {};\r\n          Object.keys(value).forEach(name => {\r\n            nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');\r\n          });\r\n        }\r\n        return nu;\r\n      }\r\n      return value;\r\n    })(object, '$');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NgxJsonViewerComponent } from './ngx-json-viewer/ngx-json-viewer.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    NgxJsonViewerComponent\r\n  ],\r\n  exports: [\r\n    NgxJsonViewerComponent\r\n  ]\r\n})\r\nexport class NgxJsonViewerModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate"],"mappings":"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"}